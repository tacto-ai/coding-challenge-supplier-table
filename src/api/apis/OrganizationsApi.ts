/* tslint:disable */
/* eslint-disable */
/**
 * Tacto Codechallange API
 * Dummy API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    Organization,
    OrganizationFromJSON,
    OrganizationToJSON,
} from '../models';

/**
 * OrganizationsApi - interface
 *
 * @export
 * @interface OrganizationsApiInterface
 */
export interface OrganizationsApiInterface {
    /**
     *
     * @summary fetches related organizations in the organization
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganizationsApiInterface
     */
    fetchOrganizationsRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<Organization>>>;

    /**
     * fetches related organizations in the organization
     */
    fetchOrganizations(initOverrides?: RequestInit): Promise<Array<Organization>>;

}

/**
 *
 */
export class OrganizationsApi extends runtime.BaseAPI implements OrganizationsApiInterface {

    /**
     * fetches related organizations in the organization
     */
    async fetchOrganizationsRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<Organization>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/organizations`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(OrganizationFromJSON));
    }

    /**
     * fetches related organizations in the organization
     */
    async fetchOrganizations(initOverrides?: RequestInit): Promise<Array<Organization>> {
        const response = await this.fetchOrganizationsRaw(initOverrides);
        return await response.value();
    }

}
